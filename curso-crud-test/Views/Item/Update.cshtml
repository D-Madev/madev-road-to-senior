@{
  ViewData["title"] = "Editar Categoria";
}
@model CRUD_TEST.Models.Item


<div class="row">
  <div class="offset-12">
    <div class="card border">
      <div class="card-header bg-black">
        <h3 class="text-white"><strong>Edicion de Items</strong></h3>
      </div>
      <div class="card-body">

        <form asp-action="Editar">

          <input type="hidden" asp-for="Id" />

          <div asp-validation-summary="ModelOnly" class="text-danger"></div>
          
            <div class="form-group">
              <div>
                <label asp-for="Name" class="control-label"><strong>Nombre</strong></label>
                <input asp-for="Name" id="myInputName" class="form-control" placeholder="Ingrese el nombre del Item" type="text" value="@Model.Name">
              </div>
              <div>
                <label asp-for="Price" class="control-label"><strong>Precio</strong></label>
                <input asp-for="Price" id="myInputPrice" class="form-control" placeholder="Ingrese el nombre del Precio" type="text" value="@Model.Price">
              </div>
            </div>
          
          <br>

          <data class="form-group mt-3">
            <button type="submit" id="myButton" disabled class="btn btn-secondary d-block mx-auto">Editar</button>
          </data>
        </form>

        <a asp-controller="Category" asp-action="Index" class="btn btn-sm btn-outline-secondary">Volver</a>
      </div>
      </div>
    </div>
  </div>
</div>


@section Scripts {
  <partial name="_ValidationScriptsPartial" />
}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const namePut = document.getElementById('myInputName')
    const pricePut = document.getElementById('myInputPrice')
    const btn = document.getElementById('myButton')
    btn.disabled = true;

    if (!btn) return;
    
    function validate() {
      const name = namePut?.value?.trim() ?? '';
      const rawPrice = pricePut?.value?.trim() ?? '';
      

      // allow comma or dot as decimal separator
      const parsed = parseFloat(rawPrice.replace(',', '.'));
      const priceIsValid = rawPrice !== '' && !Number.isNaN(parsed) && parsed > 0;

      const ok = name !== '' && priceIsValid;

      btn.disabled = !ok;
      
      // toggle classes (second arg ensures idempotence)
      btn.classList.toggle('btn-warning', ok);
      btn.classList.toggle('btn-secondary', !ok);

      // accessibility hint
      btn.setAttribute('aria-disabled', String(!ok));
    }
    
    // attach listeners to both inputs (if they exist)
    namePut?.addEventListener('input', validate);
    pricePut?.addEventListener('input', validate);

    // one-time run to set initial state
    validate()
  })
</script>